#include "Includes.h"
PFNGLACTIVETEXTUREPROC glActiveTexture = 0;
PFNGLATTACHSHADERPROC glAttachShader = 0;
PFNGLBINDBUFFERPROC glBindBuffer = 0;
PFNGLBINDVERTEXARRAYPROC glBindVertexArray = 0;
PFNGLBUFFERDATAPROC glBufferData = 0;
PFNGLBUFFERSUBDATAPROC glBufferSubData = 0;
PFNGLCOMPILESHADERPROC glCompileShader = 0;
PFNGLCREATEPROGRAMPROC glCreateProgram = 0;
PFNGLCREATESHADERPROC glCreateShader = 0;
PFNGLDEBUGMESSAGECALLBACKPROC glDebugMessageCallback = 0;
PFNGLDEBUGMESSAGECONTROLPROC glDebugMessageControl = 0;
PFNGLDELETESHADERPROC glDeleteShader = 0;
PFNGLDETACHSHADERPROC glDetachShader = 0;
PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex = 0;
PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray = 0;
PFNGLGENBUFFERSPROC glGenBuffers = 0;
PFNGLGENQUERIESPROC glGenQueries = 0;
PFNGLGENVERTEXARRAYSPROC glGenVertexArrays = 0;
PFNGLGENERATEMIPMAPPROC glGenerateMipmap = 0;
PFNGLGETINTEGER64VPROC glGetInteger64v = 0;
PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog = 0;
PFNGLGETPROGRAMIVPROC glGetProgramiv = 0;
PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv = 0;
PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v = 0;
PFNGLGETQUERYIVPROC glGetQueryiv = 0;
PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog = 0;
PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation = 0;
PFNGLLINKPROGRAMPROC glLinkProgram = 0;
PFNGLOBJECTLABELPROC glObjectLabel = 0;
PFNGLQUERYCOUNTERPROC glQueryCounter = 0;
PFNGLSHADERSOURCEPROC glShaderSource = 0;
PFNGLTEXBUFFERPROC glTexBuffer = 0;
PFNGLUNIFORM1FPROC glUniform1f = 0;
PFNGLUNIFORM1IPROC glUniform1i = 0;
PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv = 0;
PFNGLUSEPROGRAMPROC glUseProgram = 0;
PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer = 0;
void LoadOpenGLFunctions() {
	if(!(glActiveTexture = (PFNGLACTIVETEXTUREPROC)wglGetProcAddress("glActiveTexture"))) PlatformFatalError("Failed to load OpenGL function glActiveTexture!");
	if(!(glAttachShader = (PFNGLATTACHSHADERPROC)wglGetProcAddress("glAttachShader"))) PlatformFatalError("Failed to load OpenGL function glAttachShader!");
	if(!(glBindBuffer = (PFNGLBINDBUFFERPROC)wglGetProcAddress("glBindBuffer"))) PlatformFatalError("Failed to load OpenGL function glBindBuffer!");
	if(!(glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)wglGetProcAddress("glBindVertexArray"))) PlatformFatalError("Failed to load OpenGL function glBindVertexArray!");
	if(!(glBufferData = (PFNGLBUFFERDATAPROC)wglGetProcAddress("glBufferData"))) PlatformFatalError("Failed to load OpenGL function glBufferData!");
	if(!(glBufferSubData = (PFNGLBUFFERSUBDATAPROC)wglGetProcAddress("glBufferSubData"))) PlatformFatalError("Failed to load OpenGL function glBufferSubData!");
	if(!(glCompileShader = (PFNGLCOMPILESHADERPROC)wglGetProcAddress("glCompileShader"))) PlatformFatalError("Failed to load OpenGL function glCompileShader!");
	if(!(glCreateProgram = (PFNGLCREATEPROGRAMPROC)wglGetProcAddress("glCreateProgram"))) PlatformFatalError("Failed to load OpenGL function glCreateProgram!");
	if(!(glCreateShader = (PFNGLCREATESHADERPROC)wglGetProcAddress("glCreateShader"))) PlatformFatalError("Failed to load OpenGL function glCreateShader!");
	if(!(glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)wglGetProcAddress("glDebugMessageCallback"))) PlatformFatalError("Failed to load OpenGL function glDebugMessageCallback!");
	if(!(glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)wglGetProcAddress("glDebugMessageControl"))) PlatformFatalError("Failed to load OpenGL function glDebugMessageControl!");
	if(!(glDeleteShader = (PFNGLDELETESHADERPROC)wglGetProcAddress("glDeleteShader"))) PlatformFatalError("Failed to load OpenGL function glDeleteShader!");
	if(!(glDetachShader = (PFNGLDETACHSHADERPROC)wglGetProcAddress("glDetachShader"))) PlatformFatalError("Failed to load OpenGL function glDetachShader!");
	if(!(glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)wglGetProcAddress("glDrawElementsBaseVertex"))) PlatformFatalError("Failed to load OpenGL function glDrawElementsBaseVertex!");
	if(!(glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)wglGetProcAddress("glEnableVertexAttribArray"))) PlatformFatalError("Failed to load OpenGL function glEnableVertexAttribArray!");
	if(!(glGenBuffers = (PFNGLGENBUFFERSPROC)wglGetProcAddress("glGenBuffers"))) PlatformFatalError("Failed to load OpenGL function glGenBuffers!");
	if(!(glGenQueries = (PFNGLGENQUERIESPROC)wglGetProcAddress("glGenQueries"))) PlatformFatalError("Failed to load OpenGL function glGenQueries!");
	if(!(glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)wglGetProcAddress("glGenVertexArrays"))) PlatformFatalError("Failed to load OpenGL function glGenVertexArrays!");
	if(!(glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)wglGetProcAddress("glGenerateMipmap"))) PlatformFatalError("Failed to load OpenGL function glGenerateMipmap!");
	if(!(glGetInteger64v = (PFNGLGETINTEGER64VPROC)wglGetProcAddress("glGetInteger64v"))) PlatformFatalError("Failed to load OpenGL function glGetInteger64v!");
	if(!(glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)wglGetProcAddress("glGetProgramInfoLog"))) PlatformFatalError("Failed to load OpenGL function glGetProgramInfoLog!");
	if(!(glGetProgramiv = (PFNGLGETPROGRAMIVPROC)wglGetProcAddress("glGetProgramiv"))) PlatformFatalError("Failed to load OpenGL function glGetProgramiv!");
	if(!(glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)wglGetProcAddress("glGetQueryObjectiv"))) PlatformFatalError("Failed to load OpenGL function glGetQueryObjectiv!");
	if(!(glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)wglGetProcAddress("glGetQueryObjectui64v"))) PlatformFatalError("Failed to load OpenGL function glGetQueryObjectui64v!");
	if(!(glGetQueryiv = (PFNGLGETQUERYIVPROC)wglGetProcAddress("glGetQueryiv"))) PlatformFatalError("Failed to load OpenGL function glGetQueryiv!");
	if(!(glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)wglGetProcAddress("glGetShaderInfoLog"))) PlatformFatalError("Failed to load OpenGL function glGetShaderInfoLog!");
	if(!(glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)wglGetProcAddress("glGetUniformLocation"))) PlatformFatalError("Failed to load OpenGL function glGetUniformLocation!");
	if(!(glLinkProgram = (PFNGLLINKPROGRAMPROC)wglGetProcAddress("glLinkProgram"))) PlatformFatalError("Failed to load OpenGL function glLinkProgram!");
	if(!(glObjectLabel = (PFNGLOBJECTLABELPROC)wglGetProcAddress("glObjectLabel"))) PlatformFatalError("Failed to load OpenGL function glObjectLabel!");
	if(!(glQueryCounter = (PFNGLQUERYCOUNTERPROC)wglGetProcAddress("glQueryCounter"))) PlatformFatalError("Failed to load OpenGL function glQueryCounter!");
	if(!(glShaderSource = (PFNGLSHADERSOURCEPROC)wglGetProcAddress("glShaderSource"))) PlatformFatalError("Failed to load OpenGL function glShaderSource!");
	if(!(glTexBuffer = (PFNGLTEXBUFFERPROC)wglGetProcAddress("glTexBuffer"))) PlatformFatalError("Failed to load OpenGL function glTexBuffer!");
	if(!(glUniform1f = (PFNGLUNIFORM1FPROC)wglGetProcAddress("glUniform1f"))) PlatformFatalError("Failed to load OpenGL function glUniform1f!");
	if(!(glUniform1i = (PFNGLUNIFORM1IPROC)wglGetProcAddress("glUniform1i"))) PlatformFatalError("Failed to load OpenGL function glUniform1i!");
	if(!(glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)wglGetProcAddress("glUniformMatrix4fv"))) PlatformFatalError("Failed to load OpenGL function glUniformMatrix4fv!");
	if(!(glUseProgram = (PFNGLUSEPROGRAMPROC)wglGetProcAddress("glUseProgram"))) PlatformFatalError("Failed to load OpenGL function glUseProgram!");
	if(!(glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)wglGetProcAddress("glVertexAttribPointer"))) PlatformFatalError("Failed to load OpenGL function glVertexAttribPointer!");
}
